{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteLocation": {
            "type": "string",
            "allowedValues": [
                "East US",
                "West US",
                "Central US",
                "South Central US",
                "East US 2",
                "North Europe",
                "West Europe",
                "Southeast Asia",
                "East Asia",
                "Japan West",
                "Japan East"
            ],
            "defaultValue": "West US",
            "metadata": {
                "description": "Azure region where application gateway will be deployed"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The database admin username that you wish to create."
            }
        },
        "dbAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for database admin user that you wish to use."
            }
        },
        "storageAccountType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "defaultValue": "Standard_GRS",
            "metadata": {
                "description": "The type of the storage account app that you wish to create."
            }
        },
        "storageContainerName": {
            "type": "string",
            "defaultValue": "images",
            "metadata": {
                "description": "The name of storage container that you wish to use."
            }
        },
        "hostingPlanName": {
            "type": "string",
            "metadata": {
                "description": "The hosting service plan name that you wish to create."
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic",
            "metadata": {
                "description": "The pricing tier for the hosting plan."
            }
        },
        "siteName": {
            "type": "string",
            "defaultValue": "contosomomentsweb",
            "metadata": {
                "description": "The name of the web client app that you wish to create."
            }
        },
        "repoURL": {
            "type": "string",
            "metadata": {
                "description": "Repo URL."
            }
        },
        "branch": {
            "type": "string",
            "defaultValue": "stable",
            "metadata": {
                "description": "Branch"
            }
        }
    },
    "variables": {
        "lcSiteName": "[concat(parameters('siteName'), uniqueString(resourceGroup().id))]",
        "webJobSiteName": "[concat(variables('lcSiteName'), '-function')]",
        "storageAccountName": "[concat('contoso', uniqueString(resourceGroup().id))]",
        "NotificationHubName": "[variables('lcSiteName')]",
        "notificationHubNamespace": "[concat(variables('lcSiteName'), '-ns')]",
        "notificationHubLocation": "[parameters('siteLocation')]",
        "DefaultAlbumId": "11111111-1111-1111-1111-111111111111",
        "DefaultUserId": "11111111-1111-1111-1111-111111111111",
        "FacebookAuthString": "http://www.facebook.com",
        "DeleteQueueName": "deleterequest",
        "ResizeQueueName": "resizerequest",
        "sqlDbName": "[variables('lcSiteName')]",
        "sqlServerName": "[concat(variables('lcSiteName'), '-dbserver')]"

    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },

        {
            "apiVersion": "2014-04-01-preview",
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('dbAdminPassword')]"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01-preview",
                    "name": "[variables('sqlDbName')]",
                    "type": "databases",
                    "location": "[parameters('siteLocation')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "maxSizeBytes": "2147483648"
                    }
                },
                {
                    "apiVersion": "2.0",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "location": "[parameters('siteLocation')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                }
            ]
        },

        {
            "apiVersion": "2014-06-01",
            "type": "Microsoft.Web/serverfarms",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('siteLocation')]",
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "sku": "[parameters('sku')]"
            }
        },

        {
            "apiVersion": "2014-09-01",
            "type": "Microsoft.NotificationHubs/namespaces",
            "name": "[variables('notificationHubNamespace')]",
            "location": "[variables('notificationHubLocation')]",
            "properties": {
                "region": "[variables('notificationHubLocation')]",
                "namespaceType": "NotificationHub"
            },
            "resources": [
                {
                    "apiVersion": "2014-09-01",
                    "name": "[variables('NotificationHubName')]",
                    "type": "NotificationHubs",
                    "location": "[variables('notificationHubLocation')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.NotificationHubs/namespaces', variables('notificationHubNamespace'))]"
                    ],
                    "properties": {
                        "name": "[variables('NotificationHubName')]"
                    }
                }
            ]
        },

        {
            "apiVersion": "2014-04-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('lcSiteName')]",
            "location": "[parameters('siteLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]",
                "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.NotificationHubs/namespaces/NotificationHubs', variables('notificationHubNamespace'), variables('NotificationHubName'))]"
            ],
            "properties": {
                "name": "[variables('lcSiteName')]",
                "serverFarm": "[parameters('hostingPlanName')]"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01",
                    "type": "config",
                    "name": "web",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('lcSiteName'))]",
                        "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "connectionStrings": [
                            {
                                "ConnectionString": "[concat('Server=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Database=', variables('sqlDbName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', variables('sqlServerName'), ';Password=', parameters('dbAdminPassword'), ';')]",
                                "Name": "MS_TableConnectionString",
                                "Type": 2
                            },
                            {
                                "ConnectionString": "[listkeys(resourceId('Microsoft.NotificationHubs/namespaces/notificationHubs/authorizationRules', variables('notificationHubNamespace'), variables('NotificationHubName'), 'DefaultFullSharedAccessSignature'), '2014-09-01').primaryConnectionString]",
                                "Name": "MS_NotificationHubConnectionString",
                                "Type": "custom"
                            },
                            {
                                "ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]",
                                "Name": "MS_AzureStorageAccountConnectionString",
                                "Type": "custom"
                            }
                        ]
                    }
                },
                {
                    "apiVersion": "2015-01-01",
                    "type": "providers/links",
                    "name": "Microsoft.Resources/mobile-notificationhub",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('lcSiteName'))]",
                        "[resourceId('Microsoft.NotificationHubs/namespaces/NotificationHubs', variables('notificationHubNamespace'), variables('NotificationHubName'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.NotificationHubs/namespaces/NotificationHubs', variables('notificationHubNamespace'), variables('NotificationHubName'))]"
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('lcSiteName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoUrl')]",
                        "branch": "[parameters('branch')]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('lcSiteName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "StorageAccountName": "[variables('storageAccountName')]",
                        "StorageAccountKey": "[concat('',listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1)]",
                        "UploadSasDaysTime": "5",
                        "ResizeQueueName": "[variables('ResizeQueueName')]",
                        "DeleteQueueName": "[variables('DeleteQueueName')]",
                        "UploadContainerName": "[parameters('storageContainerName')]",
                        "FacebookAuthString": "[variables('FacebookAuthString')]",
                        "DefaultUserId": "[variables('DefaultUserId')]",
                        "DefaultAlbumId": "[variables('DefaultAlbumId')]",
                        "DefaultServiceURL": "[concat('https://', variables('lcSiteName'), '.azurewebsites.net/')]",
                        "MS_NotificationHubName": "[variables('NotificationHubName')]",
                        "enableSoftDelete": "true",
                        "PROJECT": "src\\Cloud\\ContosoMoments.API\\ContosoMoments.API.csproj"
                    }
                }
            ]
        },

        {
            "apiVersion": "2014-04-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('webJobSiteName')]",
            "location": "[parameters('siteLocation')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ],
            "properties": {
                "name": "[variables('webJobSiteName')]",
                "serverFarm": "[parameters('hostingPlanName')]"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01",
                    "type": "config",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', variables('webJobSiteName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "connectionStrings": [
                            {
                                "ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1)]",
                                "Name": "AzureWebJobsDashboard",
                                "Type": "custom"
                            },
                            {
                                "ConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1)]",
                                "Name": "AzureWebJobsStorage",
                                "Type": "custom"
                            }
                        ],
                        "alwaysOn": true
                    }
                },
                {
                    "apiVersion": "2015-04-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', variables('webJobSiteName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoUrl')]",
                        "branch": "[parameters('branch')]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites/', variables('webJobSiteName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "command": "src\\Cloud\\ContosoMoments.Function\\deploy.cmd"
                    }
                }
            ]
        }
    ],
    "outputs": {
    }
}
